{"ast":null,"code":"import axios from 'axios';\nimport appConfig from '../Utils/AppConfig';\nimport { AuthActionType, authStore } from '../Redux/AuthState';\nclass AuthService {\n  async register(user) {\n    const response = await axios.post(appConfig.registerUrl, user);\n    const token = response.data;\n    authStore.dispatch({\n      type: AuthActionType.Register,\n      payload: token\n    });\n  }\n  async login(credentials) {\n    const response = await axios.post(appConfig.loginUrl, credentials);\n    const token = response.data;\n    authStore.dispatch({\n      type: AuthActionType.Login,\n      payload: token\n    });\n  }\n  logout() {\n    authStore.dispatch({\n      type: AuthActionType.Logout\n    });\n  }\n  isLoggedIn() {\n    return authStore.getState().token !== null;\n  }\n  async getOneUser(id) {\n    const response = await axios.get(appConfig.usersUrl + id);\n    const user = response.data;\n    return user;\n  }\n  async updateUser(user) {\n    const response = await axios.patch(appConfig.usersUrl + user.id, user);\n    const updatedUser = response.data;\n    authStore.dispatch({\n      type: AuthActionType.Update,\n      payload: updatedUser\n    });\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["axios","appConfig","AuthActionType","authStore","AuthService","register","user","response","post","registerUrl","token","data","dispatch","type","Register","payload","login","credentials","loginUrl","Login","logout","Logout","isLoggedIn","getState","getOneUser","id","get","usersUrl","updateUser","patch","updatedUser","Update","authService"],"sources":["C:/Users/alexe/OneDrive/Desktop/Fullstack course/html example/new folder/exercise in class/18.03.24/Non Secured System/Frontend/src/Services/AuthService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport appConfig from '../Utils/AppConfig';\r\nimport { AuthActionType, authStore } from '../Redux/AuthState';\r\nimport UserModel from \"../Models/UserModel\";\r\nimport CredentialsModel from '../Models/CredentialsModel';\r\n\r\nclass AuthService {\r\n\r\n    public async register(user: UserModel): Promise<void> {\r\n        const response = await axios.post<string>(appConfig.registerUrl, user);\r\n        const token = response.data;\r\n        authStore.dispatch({ type: AuthActionType.Register, payload: token });\r\n    }\r\n\r\n    public async login(credentials: CredentialsModel): Promise<void> {\r\n        const response = await axios.post<string>(appConfig.loginUrl, credentials);\r\n        const token = response.data;\r\n        authStore.dispatch({ type: AuthActionType.Login, payload: token });\r\n    }\r\n\r\n    public logout(): void {\r\n        authStore.dispatch({ type: AuthActionType.Logout });\r\n    }\r\n\r\n    public isLoggedIn(): boolean {\r\n        return authStore.getState().token !== null;\r\n    }\r\n\r\n    public async getOneUser(id: number): Promise<UserModel> {\r\n        const response = await axios.get<UserModel>(appConfig.usersUrl + id);\r\n        const user = response.data;\r\n        return user;\r\n    }\r\n\r\n    public async updateUser(user: UserModel): Promise<void> {\r\n        const response = await axios.patch<UserModel>(appConfig.usersUrl + user.id, user);\r\n        const updatedUser = response.data;\r\n        authStore.dispatch({ type: AuthActionType.Update, payload: updatedUser });\r\n    }\r\n\r\n}\r\n\r\nconst authService = new AuthService();\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,cAAc,EAAEC,SAAS,QAAQ,oBAAoB;AAI9D,MAAMC,WAAW,CAAC;EAEd,MAAaC,QAAQA,CAACC,IAAe,EAAiB;IAClD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAASP,SAAS,CAACQ,WAAW,EAAEH,IAAI,CAAC;IACtE,MAAMI,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3BR,SAAS,CAACS,QAAQ,CAAC;MAAEC,IAAI,EAAEX,cAAc,CAACY,QAAQ;MAAEC,OAAO,EAAEL;IAAM,CAAC,CAAC;EACzE;EAEA,MAAaM,KAAKA,CAACC,WAA6B,EAAiB;IAC7D,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAASP,SAAS,CAACiB,QAAQ,EAAED,WAAW,CAAC;IAC1E,MAAMP,KAAK,GAAGH,QAAQ,CAACI,IAAI;IAC3BR,SAAS,CAACS,QAAQ,CAAC;MAAEC,IAAI,EAAEX,cAAc,CAACiB,KAAK;MAAEJ,OAAO,EAAEL;IAAM,CAAC,CAAC;EACtE;EAEOU,MAAMA,CAAA,EAAS;IAClBjB,SAAS,CAACS,QAAQ,CAAC;MAAEC,IAAI,EAAEX,cAAc,CAACmB;IAAO,CAAC,CAAC;EACvD;EAEOC,UAAUA,CAAA,EAAY;IACzB,OAAOnB,SAAS,CAACoB,QAAQ,CAAC,CAAC,CAACb,KAAK,KAAK,IAAI;EAC9C;EAEA,MAAac,UAAUA,CAACC,EAAU,EAAsB;IACpD,MAAMlB,QAAQ,GAAG,MAAMP,KAAK,CAAC0B,GAAG,CAAYzB,SAAS,CAAC0B,QAAQ,GAAGF,EAAE,CAAC;IACpE,MAAMnB,IAAI,GAAGC,QAAQ,CAACI,IAAI;IAC1B,OAAOL,IAAI;EACf;EAEA,MAAasB,UAAUA,CAACtB,IAAe,EAAiB;IACpD,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC6B,KAAK,CAAY5B,SAAS,CAAC0B,QAAQ,GAAGrB,IAAI,CAACmB,EAAE,EAAEnB,IAAI,CAAC;IACjF,MAAMwB,WAAW,GAAGvB,QAAQ,CAACI,IAAI;IACjCR,SAAS,CAACS,QAAQ,CAAC;MAAEC,IAAI,EAAEX,cAAc,CAAC6B,MAAM;MAAEhB,OAAO,EAAEe;IAAY,CAAC,CAAC;EAC7E;AAEJ;AAEA,MAAME,WAAW,GAAG,IAAI5B,WAAW,CAAC,CAAC;AAErC,eAAe4B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}